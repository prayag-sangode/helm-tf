# Define Kubernetes and Helm providers
provider "kubernetes" {
  config_path = "~/.kube/config" # Path to your kubeconfig file
}

provider "helm" {
  kubernetes {
    config_path = "~/.kube/config"
  }
}

# Install NGINX Ingress Controller with Helm
resource "helm_release" "nginx_ingress" {
  name       = "nginx-ingress"
  namespace  = "ingress-nginx"
  create_namespace = true
  repository = "https://kubernetes.github.io/ingress-nginx"
  chart      = "ingress-nginx"

  values = [
    <<EOF
controller:
  service:
    type: LoadBalancer # Uses MetalLB for external IP allocation
EOF
  ]
}

# Install Cert-Manager with Helm
resource "helm_release" "cert_manager" {
  name       = "cert-manager"
  namespace  = "cert-manager"
  create_namespace = true
  repository = "https://charts.jetstack.io"
  chart      = "cert-manager"

  values = [
    <<EOF
installCRDs: true # Automatically install CRDs required by Cert-Manager
EOF
  ]
}


# Install Kube-Prometheus Stack with Helm (Prometheus, Grafana, Alertmanager)
resource "helm_release" "kube_prometheus_stack" {
  name       = "kube-prometheus-stack"
  namespace  = "monitoring"
  create_namespace = true
  repository = "https://prometheus-community.github.io/helm-charts"
  chart      = "kube-prometheus-stack"

  values = [
    <<EOF
prometheus:
  service:
    type: LoadBalancer
  persistence:
    enabled: true
    size: 8Gi

grafana:
  adminPassword: admin123 # Set Grafana admin password here
  service:
    type: LoadBalancer
  persistence:
    enabled: true
    size: 8Gi

alertmanager:
  enabled: true
  service:
    type: LoadBalancer
  persistence:
    enabled: true
    size: 8Gi
EOF
  ]
}

resource "helm_release" "redis-cluster" {
  name             = "redis-cluster"
  repository       = "oci://registry-1.docker.io/bitnamicharts"
  chart           = "redis"
  version          = "20.7.0"
  namespace        = "redis-cluster"
  create_namespace = true

  values = [
    <<-EOT
    master:
      persistence:
        enabled: false

    replica:
      persistence:
        enabled: false

    metrics:
      enabled: true

      serviceMonitor:
        enabled: true
        port: http-metrics
        namespace: "monitoring"
        labels:
          release: "kube-prometheus-stack"
    EOT
  ]
}

